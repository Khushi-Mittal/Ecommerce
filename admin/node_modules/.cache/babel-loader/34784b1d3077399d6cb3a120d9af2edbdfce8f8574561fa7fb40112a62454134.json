{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"./AddProduct.css\";\n// import upload_area from \"../Assets/upload_area.svg\";\n// import { backend_url } from \"../../App\";\n\n// const AddProduct = () => {\n\n//   const [image, setImage] = useState(false);\n//   const [productDetails, setProductDetails] = useState({\n//     name: \"\",\n//     description: \"\",\n//     image: \"\",\n//     category: \"women\",\n//     new_price: \"\",\n//     old_price: \"\"\n//   });\n\n//   const AddProduct = async () => {\n\n//     let dataObj;\n//     let product = productDetails;\n\n//     let formData = new FormData();\n//     formData.append('product', image);\n\n//     await fetch(`${backend_url}/upload`, {\n//       method: 'POST',\n//       headers: {\n//         Accept: 'application/json',\n//       },\n//       body: formData,\n//     }).then((resp) => resp.json())\n//       .then((data) => { dataObj = data });\n\n//     if (dataObj.success) {\n//       product.image = dataObj.image_url;\n//       await fetch(`${backend_url}/addproduct`, {\n//         method: 'POST',\n//         headers: {\n//           Accept: 'application/json',\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(product),\n//       })\n//         .then((resp) => resp.json())\n//         .then((data) => { data.success ? alert(\"Product Added\") : alert(\"Failed\") });\n\n//     }\n//   }\n\n//   const changeHandler = (e) => {\n//     setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\n//   }\n\n//   return (\n//     <div className=\"addproduct\">\n//       <div className=\"addproduct-itemfield\">\n//         <p>Product title</p>\n//         <input type=\"text\" name=\"name\" value={productDetails.name} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\n//       </div>\n//       <div className=\"addproduct-itemfield\">\n//         <p>Product description</p>\n//         <input type=\"text\" name=\"description\" value={productDetails.description} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\n//       </div>\n//       <div className=\"addproduct-price\">\n//         <div className=\"addproduct-itemfield\">\n//           <p>Price</p>\n//           <input type=\"number\" name=\"old_price\" value={productDetails.old_price} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\n//         </div>\n//         <div className=\"addproduct-itemfield\">\n//           <p>Offer Price</p>\n//           <input type=\"number\" name=\"new_price\" value={productDetails.new_price} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\n//         </div>\n//       </div>\n//       <div className=\"addproduct-itemfield\">\n//         <p>Product category</p>\n//         <select value={productDetails.category} name=\"category\" className=\"add-product-selector\" onChange={changeHandler}>\n//           <option value=\"women\">Women</option>\n//           <option value=\"men\">Men</option>\n//           <option value=\"kid\">Kid</option>\n//         </select>\n//       </div>\n//       <div className=\"addproduct-itemfield\">\n//         <p>Product image</p>\n//         <label htmlFor=\"file-input\">\n//           <img className=\"addproduct-thumbnail-img\" src={!image ? upload_area : URL.createObjectURL(image)} alt=\"\" />\n//         </label>\n//         <input onChange={(e) => setImage(e.target.files[0])} type=\"file\" name=\"image\" id=\"file-input\" accept=\"image/*\" hidden />\n//       </div>\n//       <button className=\"addproduct-btn\" onClick={() => { AddProduct() }}>ADD</button>\n//     </div>\n//   );\n// };\n\n// export default AddProduct;","map":{"version":3,"names":[],"sources":["C:/Users/Hp/OneDrive/Desktop/Full_Stack_Ecommerce/admin/src/Components/AddProduct/AddProduct.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"./AddProduct.css\";\r\n// import upload_area from \"../Assets/upload_area.svg\";\r\n// import { backend_url } from \"../../App\";\r\n\r\n// const AddProduct = () => {\r\n\r\n//   const [image, setImage] = useState(false);\r\n//   const [productDetails, setProductDetails] = useState({\r\n//     name: \"\",\r\n//     description: \"\",\r\n//     image: \"\",\r\n//     category: \"women\",\r\n//     new_price: \"\",\r\n//     old_price: \"\"\r\n//   });\r\n\r\n//   const AddProduct = async () => {\r\n\r\n//     let dataObj;\r\n//     let product = productDetails;\r\n\r\n//     let formData = new FormData();\r\n//     formData.append('product', image);\r\n\r\n//     await fetch(`${backend_url}/upload`, {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         Accept: 'application/json',\r\n//       },\r\n//       body: formData,\r\n//     }).then((resp) => resp.json())\r\n//       .then((data) => { dataObj = data });\r\n\r\n//     if (dataObj.success) {\r\n//       product.image = dataObj.image_url;\r\n//       await fetch(`${backend_url}/addproduct`, {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           Accept: 'application/json',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(product),\r\n//       })\r\n//         .then((resp) => resp.json())\r\n//         .then((data) => { data.success ? alert(\"Product Added\") : alert(\"Failed\") });\r\n\r\n//     }\r\n//   }\r\n\r\n//   const changeHandler = (e) => {\r\n//     setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"addproduct\">\r\n//       <div className=\"addproduct-itemfield\">\r\n//         <p>Product title</p>\r\n//         <input type=\"text\" name=\"name\" value={productDetails.name} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\r\n//       </div>\r\n//       <div className=\"addproduct-itemfield\">\r\n//         <p>Product description</p>\r\n//         <input type=\"text\" name=\"description\" value={productDetails.description} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\r\n//       </div>\r\n//       <div className=\"addproduct-price\">\r\n//         <div className=\"addproduct-itemfield\">\r\n//           <p>Price</p>\r\n//           <input type=\"number\" name=\"old_price\" value={productDetails.old_price} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\r\n//         </div>\r\n//         <div className=\"addproduct-itemfield\">\r\n//           <p>Offer Price</p>\r\n//           <input type=\"number\" name=\"new_price\" value={productDetails.new_price} onChange={(e) => { changeHandler(e) }} placeholder=\"Type here\" />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"addproduct-itemfield\">\r\n//         <p>Product category</p>\r\n//         <select value={productDetails.category} name=\"category\" className=\"add-product-selector\" onChange={changeHandler}>\r\n//           <option value=\"women\">Women</option>\r\n//           <option value=\"men\">Men</option>\r\n//           <option value=\"kid\">Kid</option>\r\n//         </select>\r\n//       </div>\r\n//       <div className=\"addproduct-itemfield\">\r\n//         <p>Product image</p>\r\n//         <label htmlFor=\"file-input\">\r\n//           <img className=\"addproduct-thumbnail-img\" src={!image ? upload_area : URL.createObjectURL(image)} alt=\"\" />\r\n//         </label>\r\n//         <input onChange={(e) => setImage(e.target.files[0])} type=\"file\" name=\"image\" id=\"file-input\" accept=\"image/*\" hidden />\r\n//       </div>\r\n//       <button className=\"addproduct-btn\" onClick={() => { AddProduct() }}>ADD</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddProduct;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}